
Users:

	u ∈ U

	source(u)

	destination(u)

	earliest_departure(u)

	latest_arrival(u)

	wants_to_drive(u) [yes/no/flex]

	available_seats(u)

	walking_distance(u)

	no_driver_penalty

Locations:

	i, j ∈ L

	distance(i, j)

	drive_time(i, j)

	walk_time(i, j)

Routes:

	route(u, i, j) ∈ {0, 1}

	fan_in(u, i) = ∑ j ∈ L: route(u, j, i)

	fan_out(u, i) = ∑ j ∈ L: route(u, i, j)

	fan_out(u, i) - fan_in(u, i) = 1 when i = source(u)
				     = -1 when i = destination(u)
				     = 0 otherwise

	fan_in(u, i) <= 1

	fan_out(u, i) <= 1

	visits(u, i) ∈ {0, 1}

	visits(u, i) = fan_in(u, i) or fan_out(u, i)

		visits(u, i) >= fan_in(u, i)

		visits(u, i) >= fan_out(u, i)

		visits(u, i) <= fan_in(u, i) + fan_out(u, i)

Drivers:

	d, u ∈ U

	driver(u) ∈ {0, 1}

	driver(u) = 0 when wants_to_drive(u) = "no"
		  = 1 when wants_to_drive(u) = "yes"

	drives(d, u) ∈ {0, 1}

	drives(d, u) == driver(d) when d = u
		     <= driver(d) otherwise

	∑ d ∈ U: drives(d, u) <= 1

	∑ u ∈ U: drives(d, u) <= available_seats(d)

	has_driver(u) = ∑ d ∈ U: drives(d, u)

	route_as_driver(u, i, j) ∈ {0, 1}

	route_as_driver(u, i, j) = 1 when route(u, i, j) and driver(u)
		 		 = 0 otherwise

		route_as_driver(u, i, j) >= -1 + route(u, i, j) + driver(u)

		route_as_driver(u, i, j) <= route(u, i, j)

		route_as_driver(u, i, j) <= driver(u)

	distance_by_car = ∑ u ∈ U: ∑ i ∈ L: ∑ j ∈ L: route_as_driver(u, i, j) * distance(i, j)

Walking:

	route_by_car(u, i, j) ∈ {0, 1}

	route_by_car(u, i, j) = 1 when route(u, i, j) and route(d, i, j) and drives(d, u)
			      = 0 otherwise

		route_by_car(u, i, j) >= -2 + route(u, i, j) + route(d, i, j) + drives(d, u)

		route_by_car(u, i, j) <= route(d, i, j) + (1 - drives(d, u))

		route_by_car(u, i, j) <= route(u, i, j)

		route_by_car(u, i, j) <= has_driver(u)

	route_by_walk(u, i, j) ∈ {0, 1}

	route_by_walk(u, i, j) = route(u, i, j) - route_by_car(u, i, j)

	∑ i, j ∈ L: route_by_walk(u, i, j) * distance(i, j) <= walking_distance(u)

Penalties:

	penalty = ∑ u ∈ U: (1 - has_driver(u)) * no_driver_penalty

Times:

	time(u, i) ∈ ℝ

	time(u, i) >= 0

	time(u, i) = 0 when not visits(u, i)

		time(u, i) <= M * visits(u, i)

	time(u, source(u)) >= earliest_departure(u)

	time(u, destination(u)) <= latest_arrival(u)

	time(u, j) = time(u, i) + drive_time(i, j) when route_by_car(u, i, j)

		time(u, j) >= time(u, i) + drive_time(i, j) - M * (1 - route_by_car(u, i, j))

		time(u, j) <= time(u, i) + drive_time(i, j) + M * (1 - route_by_car(u, i, j))

	time(u, j) = time(u, i) + walk_time(i, j) when route_by_walk(u, i, j)

		time(u, j) >= time(u, i) + walk_time(i, j) - M * (1 - route_by_walk(u, i, j))

		time(u, j) <= time(u, i) + walk_time(i, j) + M * (1 - route_by_walk(u, i, j))

	time(u, i) = time(d, i) when drives(d, u) and visits(u, i) and visits(d, i)

		time(u, i) >= time(d, i) - M * (3 - drives(d, u) - visits(u, i) - visits(d, i))

		time(u, i) <= time(d, i) + M * (3 - drives(d, u) - visits(u, i) - visits(d, i))

Goal:

	minimize(distance_by_car + penalty)
	

	

	

	

	


	

	

	
